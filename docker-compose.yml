version: '3.8'

services:
  # PostgreSQL数据库
  db:
    image: postgres:15-alpine
    container_name: url_manage_db
    environment:
      POSTGRES_DB: url_manage_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_this_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - url_manage_network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: url_manage_redis
    ports:
      - "6379:6379"
    networks:
      - url_manage_network

  # Django后端
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: url_manage_backend
    environment:
      - DEBUG=False
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=url_manage_db
      - DB_USER=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD:-change_this_password}
      - DB_HOST=db
      - DB_PORT=5432
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-your-secret-key-change-in-production}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - url_manage_network

  # React前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: url_manage_frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - url_manage_network

  # Nginx反向代理（可选，用于生产环境）
  nginx:
    image: nginx:alpine
    container_name: url_manage_nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - backend
      - frontend
    networks:
      - url_manage_network
    profiles:
      - production

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  url_manage_network:
    driver: bridge