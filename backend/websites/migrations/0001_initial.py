# Generated by Django 5.2.5 on 2025-08-09 13:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='分类名称')),
                ('description', models.TextField(blank=True, verbose_name='分类描述')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='分类颜色')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='图标')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='排序')),
                ('website_count', models.PositiveIntegerField(default=0, verbose_name='网站数量')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='websites.category', verbose_name='父分类')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '分类',
                'verbose_name_plural': '分类',
                'db_table': 'categories',
                'ordering': ['sort_order', 'name'],
                'unique_together': {('name', 'user', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='标签名称')),
                ('color', models.CharField(default='#6c757d', max_length=7, verbose_name='标签颜色')),
                ('usage_count', models.PositiveIntegerField(default=0, verbose_name='使用次数')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'db_table': 'tags',
                'ordering': ['-usage_count', 'name'],
                'unique_together': {('name', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='网站标题')),
                ('url', models.URLField(verbose_name='网站链接')),
                ('description', models.TextField(blank=True, verbose_name='网站描述')),
                ('favicon', models.URLField(blank=True, verbose_name='网站图标')),
                ('screenshot', models.ImageField(blank=True, null=True, upload_to='screenshots/', verbose_name='网站截图')),
                ('meta_keywords', models.TextField(blank=True, verbose_name='关键词')),
                ('meta_author', models.CharField(blank=True, max_length=100, verbose_name='作者')),
                ('meta_language', models.CharField(blank=True, max_length=10, verbose_name='语言')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('is_public', models.BooleanField(default=False, verbose_name='是否公开')),
                ('visit_count', models.PositiveIntegerField(default=0, verbose_name='访问次数')),
                ('last_visited', models.DateTimeField(blank=True, null=True, verbose_name='最后访问时间')),
                ('quality_score', models.FloatField(default=0.0, verbose_name='质量评分')),
                ('loading_speed', models.FloatField(blank=True, null=True, verbose_name='加载速度')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='websites', to='websites.category', verbose_name='分类')),
                ('tags', models.ManyToManyField(blank=True, related_name='websites', to='websites.tag', verbose_name='标签')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='websites', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '网站',
                'verbose_name_plural': '网站',
                'db_table': 'websites',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebsiteNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='笔记标题')),
                ('content', models.TextField(verbose_name='笔记内容')),
                ('is_private', models.BooleanField(default=True, verbose_name='是否私有')),
                ('note_type', models.CharField(choices=[('general', '一般笔记'), ('highlight', '重点标记'), ('todo', '待办事项'), ('review', '评价反馈')], default='general', max_length=20, verbose_name='笔记类型')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='website_notes', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='websites.website', verbose_name='网站')),
            ],
            options={
                'verbose_name': '网站笔记',
                'verbose_name_plural': '网站笔记',
                'db_table': 'website_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='website',
            index=models.Index(fields=['user', 'category'], name='websites_user_id_181cf2_idx'),
        ),
        migrations.AddIndex(
            model_name='website',
            index=models.Index(fields=['user', 'is_active'], name='websites_user_id_dd480c_idx'),
        ),
        migrations.AddIndex(
            model_name='website',
            index=models.Index(fields=['quality_score'], name='websites_quality_dea5a8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='website',
            unique_together={('url', 'user')},
        ),
    ]
